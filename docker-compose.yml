version: '3.8'

services:
  mtls-proxy:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mtls-proxy
    restart: unless-stopped
    
    # Port mappings
    ports:
      - "8443:8443"  # Proxy port
      - "8080:8080"  # Web interface port
    
    # Volume mounts
    volumes:
      # Configuration
      - ./config:/etc/mtls-proxy:ro
      # Certificates (read-write for uploads)
      - ./certs:/etc/mtls-proxy/certs
      # Logs
      - ./logs:/var/log/mtls-proxy
      # Data (SQLite databases)
      - ./data:/var/lib/mtls-proxy
    
    # Environment variables
    environment:
      - RUST_LOG=info
      - RUST_BACKTRACE=0
      # Override configuration if needed
      # - MTLS_PROXY_SERVER_HOST=0.0.0.0
      # - MTLS_PROXY_SERVER_PORT=8443
      # - MTLS_PROXY_TARGET_BASE_URL=https://api.example.com
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '1.0'
        reservations:
          memory: 256M
          cpus: '0.5'
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Security options
    security_opt:
      - no-new-privileges:true
    
    # Network configuration
    networks:
      - mtls-proxy-network
    
    # Labels for management
    labels:
      - "com.mtls-proxy.description=High-performance mTLS proxy server"
      - "com.mtls-proxy.version=0.1.0"
      - "com.mtls-proxy.maintainer=support@your-org.com"

  # Optional: Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: mtls-proxy-prometheus
    restart: unless-stopped
    
    ports:
      - "9090:9090"
    
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    
    networks:
      - mtls-proxy-network
    
    depends_on:
      - mtls-proxy

  # Optional: Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    container_name: mtls-proxy-grafana
    restart: unless-stopped
    
    ports:
      - "3000:3000"
    
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    
    networks:
      - mtls-proxy-network
    
    depends_on:
      - prometheus

# Networks
networks:
  mtls-proxy-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
